% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql.R
\name{SQL}
\alias{SQL}
\title{Statistical Quantile Learning}
\usage{
SQL(
  data,
  q = 1,
  d = 4,
  lambda = 0.1,
  tol = 1e-04,
  max_iter = 30,
  max_cycles = 10,
  use_Rfast = FALSE,
  pretrain_tol = 1e-04,
  Sigma = NULL
)
}
\arguments{
\item{data}{A  real data matrix.}

\item{q}{The number of factors to be estimated.}

\item{d}{The number of B-splines basis functions.}

\item{lambda}{Tuning constant for penalyzation.}

\item{tol}{Tolerance for the qap optimization problem.}

\item{max_iter}{Maximum number of iterations for the qap algorithm.}

\item{max_cycles}{Maximum number for the cycles for the backfitting algorithm.}

\item{use_Rfast}{If TRUE, use package Rfast to compute the cross-product of the data matrix. This option may lead to speed gains if the number of variables is large.}

\item{pretrain_tol}{Tolerance for pretraining.}

\item{Sigma}{Cross-product of the centered data.}
}
\value{
An object with S3 class sql.
\itemize{
\item factor a n times q matrix  containing the estimated latent factors.
\item data the data matrix.
\item qap a list containing the solution of the Quadratic Assignment Problem, the mean squared error for each iteration, and the convergence status.
\item splines an object to produce the basis functions.
\item lambda the tuning parameter.
\item d dimension of the basis functions.
\item q number of latent factors.
\item intercepts parameter vector of intercepts of length p.
\item EV Explained variance.
}
}
\description{
Estimate the Additive Factor Model with the Statistical Quantile Learning method.
The implementation makes use of penalyzed B-splines basis functions.
}
\examples{
set.seed(123456)
sim <- simulate_afm(n = 150, p = 200, q = 1, sde = 1)
sql <- SQL(sim$data, d = 4 )
sql
plot(sql)
abs( cor(sim$factor_z, sql$factor) )
}
